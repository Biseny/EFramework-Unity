//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaLoadResWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaLoadRes), typeof(System.Object));
		L.RegFunction("GetResources", GetResources);
		L.RegFunction("UnloadResObj", UnloadResObj);
		L.RegFunction("UnloadBundleObj", UnloadBundleObj);
		L.RegFunction("UnloadScenceObjes", UnloadScenceObjes);
		L.RegFunction("UnLoadBundleAndRes", UnLoadBundleAndRes);
		L.RegFunction("UnloadSingleBundle", UnloadSingleBundle);
		L.RegFunction("UnloadScenceBundle", UnloadScenceBundle);
		L.RegFunction("UnloadAll", UnloadAll);
		L.RegFunction("DebugBundle", DebugBundle);
		L.RegFunction("New", _CreateLuaLoadRes);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateLuaLoadRes(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				LuaLoadRes obj = new LuaLoadRes();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: LuaLoadRes.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResources(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			LuaLoadRes obj = (LuaLoadRes)ToLua.CheckObject<LuaLoadRes>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
			obj.GetResources(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadResObj(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			LuaLoadRes obj = (LuaLoadRes)ToLua.CheckObject<LuaLoadRes>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.UnloadResObj(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadBundleObj(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaLoadRes obj = (LuaLoadRes)ToLua.CheckObject<LuaLoadRes>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.UnloadBundleObj(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadScenceObjes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaLoadRes obj = (LuaLoadRes)ToLua.CheckObject<LuaLoadRes>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.UnloadScenceObjes(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnLoadBundleAndRes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaLoadRes obj = (LuaLoadRes)ToLua.CheckObject<LuaLoadRes>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.UnLoadBundleAndRes(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadSingleBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaLoadRes obj = (LuaLoadRes)ToLua.CheckObject<LuaLoadRes>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.UnloadSingleBundle(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadScenceBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaLoadRes obj = (LuaLoadRes)ToLua.CheckObject<LuaLoadRes>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.UnloadScenceBundle(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaLoadRes obj = (LuaLoadRes)ToLua.CheckObject<LuaLoadRes>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.UnloadAll(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DebugBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaLoadRes obj = (LuaLoadRes)ToLua.CheckObject<LuaLoadRes>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.DebugBundle(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, LuaLoadRes.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

